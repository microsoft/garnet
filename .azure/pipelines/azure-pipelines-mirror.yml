#trigger:
 # branches:
  #  include:
  # - irinasp/mirror_github
resources:
  repositories:
  - repository: GarnetGithubRepo
    type: github
    name: microsoft/garnet
    endpoint: ADO_to_Github_ServiceConnection
    trigger:
      branches:
        include:
        - main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: MirrorGithubToADO
  displayName: 'Mirror GitHub main to Azure DevOps irinasp/mirror_github'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: GarnetGithubRepo
    clean: true
    persistCredentials: true

  - script: |
      # Set up Git identity  
      git config user.email "$(GIT_USER_EMAIL)"
      git config user.name "$(GIT_USER_NAME)"
      git config --global credential.helper 'cache --timeout=3600'

      # Fetch the latest changes from the GitHub main branch
      git fetch origin main

      # Check out the irinasp/mirror_github branch locally
      git checkout irinasp/mirror_github

      # Reset the irinasp/mirror_github branch to match the origin/main branch
      git reset --hard origin/main

      # Push the local irinasp/mirror_github branch to Azure DevOps
      # git push https://dev.azure.com/msresearch/_git/Garnet irinasp/mirror_github
      git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push https://dev.azure.com/msresearch/_git/Garnet irinasp/mirror_github

    displayName: 'Mirror GitHub main to Azure DevOps irinasp/mirror_github'
    env:
      GIT_USER_EMAIL: $(GIT_USER_EMAIL)
      GIT_USER_NAME: $(GIT_USER_NAME)
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)