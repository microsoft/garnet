trigger:
  branches:
    include:
      - refs/heads/main

schedules:
- cron: "0 7 * * *"   # 7:00 UTC is 11:00PM Pacific
  branches:
    include:
    - refs/heads/main
  always: true

resources:
  repositories:
  - repository: self
    type: git

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs: 
- job: 'Linux'
  pool:
    name: GarnetPerfCI_Linux_Pool
    vmImage: GarnetPerfCI_LinuxImage
  displayName: 'Linux'
  timeoutInMinutes: 75

  steps:
  - task: UseDotNet@2
    displayName: Use .NET 8.0
    inputs:
      packageType: 'sdk'
      version: '8.0.x'

  - bash: |
      sudo npm install -g azurite
      sudo mkdir azurite
      sudo azurite --silent --location azurite --debug azurite\debug.log &
    displayName: 'Install and Run Azurite'
      
  - task: NuGetAuthenticate@1
    displayName: Nuget Authenticate

  - task: UseDotNet@2 # Optional if the .NET Core SDK is already installed
    displayName: Use .NET

  - script: dotnet restore
    displayName: .NET Restore

  - task: DotNetCoreCLI@2
    displayName: '.NET Core build Cluster binaries and tests $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/Garnet.test.cluster.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: '.NET Core build Garnet binaries and tests $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/Garnet.test.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: '.NET Core build Garnet Server'
    inputs:
      command: 'build'
      projects: '**/GarnetServer.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: '.NET Core build Resp.benchmark'
    inputs:
      command: 'build'
      projects: '**/Resp.benchmark.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: PowerShell@2
    displayName: '1: Resp.Benchmark ONLINE; Get Set; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_GetSet_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '2: Resp.Benchmark ONLINE; Get Set; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_GetSet_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '3: Resp.Benchmark ONLINE; ZADD ZREM; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_ZADDZREM_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '4: Resp.Benchmark ONLINE; ZADD ZREM; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_ZADDZREM_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '5: Resp.Benchmark OFFLINE; Get; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_Get_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '6: Resp.Benchmark OFFLINE; Get; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_Get_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '7: Resp.Benchmark OFFLINE; ZADDREM; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_ZADDREM_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '8: Resp.Benchmark OFFLINE; ZADDREM; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_ZADDREM_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: CopyFiles@2
    displayName: 'Copy Results Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: '**/test/PerfRegressionTesting/results/**/*'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: CopyFiles@2
    displayName: 'Copy ErrorLog Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: '**/test/PerfRegressionTesting/errorlog/**/*'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact Output Files: LogResultFiles'
    inputs:
      ArtifactName: LogAndResultFiles

- job: Windows 
  displayName: Windows
  cancelTimeoutInMinutes: 1

  pool:
    name: GarnetPerfCI_Pool
    vmImage: GarnetPerfCI_WindowsImage
  steps:
  - checkout: self
    clean: False
    submodules: recursive
    persistCredentials: True
   
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 8.0.x'
    inputs:
      version: 8.0.x
   
  - task: NuGetToolInstaller@1
    displayName: Nuget Tool Installer
    inputs:
      versionspec: '*'
      checkLatest: true

  - task: NuGetAuthenticate@1
    displayName: 'NuGet Authenticate'

  - task: DotNetCoreCLI@2
    displayName: 'Build Garnet Cluster binaries and tests $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/Garnet.test.cluster.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - script: nuget restore
    displayName: Nuget Restore

  - task: DotNetCoreCLI@2
    displayName: 'Build Garnet binaries and tests $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/Garnet.test.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Build Garnet Server $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/GarnetServer.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: '.NET Core build Resp.benchmark'
    inputs:
      command: 'build'
      projects: '**/Resp.benchmark.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: PowerShell@2
    displayName: 'Run Tsavorite Benchmark Test'
    enabled: false
    inputs:
      targetType: filePath
      filePath: './libs/storage/Tsavorite/cs/benchmark/scripts/run_benchmark.ps1'
      arguments: '$(Build.SourcesDirectory)'
      workingDirectory: libs/storage/Tsavorite/cs/benchmark/scripts

  - task: PowerShell@2
    displayName: '1: Resp.Benchmark ONLINE; Get Set; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_GetSet_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '2: Resp.Benchmark ONLINE; Get Set; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_GetSet_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '3: Resp.Benchmark ONLINE; ZADD ZREM; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_ZADDZREM_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '4: Resp.Benchmark ONLINE; ZADD ZREM; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Online_ZADDZREM_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '5: Resp.Benchmark OFFLINE; Get; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_Get_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '6: Resp.Benchmark OFFLINE; Get; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_Get_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '7: Resp.Benchmark OFFLINE; ZADDREM; 1 Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_ZADDREM_1Thr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: PowerShell@2
    displayName: '8: Resp.Benchmark OFFLINE; ZADDREM; Max Thread'
    continueOnError: true
    enabled: true
    inputs:
      targetType: filePath
      filePath: './test/PerfRegressionTesting/run_benchmark.ps1'
      arguments: 'ConfigFiles\CI_Config_Offline_ZADDREM_MaxThr.json'
      workingDirectory: test/PerfRegressionTesting

  - task: CopyFiles@2
    displayName: 'Copy Results Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: '**/test/PerfRegressionTesting/results/**/*'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: CopyFiles@2
    displayName: 'Copy ErrorLog Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: '**/test/PerfRegressionTesting/errorlog/**/*'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact Output Files: LogResultFiles'
    inputs:
      ArtifactName: LogAndResultFiles
