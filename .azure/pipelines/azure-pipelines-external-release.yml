######################################
# NOTE: Before running this pipeline to generate a the GitHub Release and new nuget packages, update the VersionPrefix value in Version.props file
# NOTE: When Version.props file is modified, this pipeline will automatically get triggered
# NOTE: If this pipeline is ran against a branch that isn't main, the GitHub Release task and NuGet push task will be skipped
# NOTE: If this pipeline is manually started, a "Proof of Presence" (from a SAW machine) will be required before this pipeline can proceed.
###################################### 
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - Version.props
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

pool:
  vmImage: 'windows-latest'

jobs:
- job: Phase_1
  displayName: Assessment
  cancelTimeoutInMinutes: 1
  pool:
    name: Azure Pipelines
    vmImage: 'windows-latest'
  steps:
  - checkout: self
    clean: False
    submodules: recursive
    persistCredentials: True

  - task: PowerShell@2
    displayName: 'Extract version number from Version.props'
    inputs:
      filePath: .azure/pipelines/extract_version.ps1
      workingDirectory: .azure/pipelines

  - task: UseDotNet@2
    displayName: Use .NET Core sdk 6.0.x - needed for code signing
    inputs:
      version: 6.0.x
  - task: UseDotNet@2
    displayName: Use .NET Core sdk 8.0.x
    inputs:
      version: 8.0.x
  - task: UseDotNet@2
    displayName: Use .NET Core sdk 9.0.x
    inputs:
      version: 9.0.x

  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      projects: '**/Garnet*.csproj'
      arguments: -c Release

  - task: PowerShell@2
    displayName: 'Publish the GarnetServer binaries'
    inputs:
      filePath: .azure/pipelines/createbinaries.ps1 
      arguments: 1
      workingDirectory: .azure/pipelines

  - task: EsrpCodeSigning@5
    displayName: Sign the binaries for nuget and zipped files
    inputs:
      ConnectedServiceName: 'GarnetCodeSignConn'
      UseMSIAuthentication: false 
      AppRegistrationClientId: 'ff81d1e2-748b-49e1-a771-b57246668c2b'
      AppRegistrationTenantId: '975f013f-7f24-47e8-a7d3-abc4752bf346'
      AuthAKVName: 'GarnetCodeSignKeyVault'
      AuthSignCertName: 'garnet-codesign-signing-cert'
      AuthCertName: 'garnet-codesign-auth-cert'
      ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v2'
      FolderPath: .
      Pattern: Garnet*.dll,Tsavorite*.dll,Garnet*.exe,HdrHistogram.dll,native_device.dll,*Lua.dll
      signConfigType: inlineSignParams
      inlineOperation: >-
        [
            {
                  "KeyCode" : "CP-230012",
                  "OperationCode" : "SigntoolSign",
                  "Parameters" : {
                      "OpusName" : "Microsoft",
                      "OpusInfo" : "http://www.microsoft.com",
                      "FileDigest" : "/fd \"SHA256\"",
                      "PageHash" : "/NPH",
                      "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  },
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
            },
            {
                  "KeyCode" : "CP-230012",
                  "OperationCode" : "SigntoolVerify",
                  "Parameters" : {},
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
            }
         ]
      SessionTimeout: 20
      VerboseLogin: true      

  - task: CmdLine@2
    displayName: nuget pack Garnet Library
    inputs:
      workingDirectory: $(System.DefaultWorkingDirectory)
      script: 'dotnet pack --no-build --no-restore --output $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(Build.BuildNumber) /p:Configuration=Release libs/host/Garnet.host.csproj'

  - task: CmdLine@2
    displayName: nuget pack Garnet Server
    inputs:
      workingDirectory: $(System.DefaultWorkingDirectory)
      script: 'dotnet pack --no-build --no-restore --output $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(Build.BuildNumber) /p:Configuration=Release main/GarnetServer/GarnetServer.csproj'

  - task: EsrpCodeSigning@5
    displayName: Sign the NuGet Packages 
    inputs:
      ConnectedServiceName: 'GarnetCodeSignConn'
      UseMSIAuthentication: false 
      AppRegistrationClientId: 'ff81d1e2-748b-49e1-a771-b57246668c2b'
      AppRegistrationTenantId: '975f013f-7f24-47e8-a7d3-abc4752bf346'
      AuthAKVName: 'GarnetCodeSignKeyVault'
      AuthSignCertName: 'garnet-codesign-signing-cert'
      AuthCertName: 'garnet-codesign-auth-cert'
      ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v2'
      FolderPath: $(Build.ArtifactStagingDirectory)
      Pattern: Microsoft.Garnet.*.nupkg, garnet-server.*.nupkg
      signConfigType: inlineSignParams
      inlineOperation: >-
        [
            {
                  "KeyCode" : "CP-401405",
                  "OperationCode" : "NuGetSign",
                  "Parameters" : {
                      "OpusName" : "Microsoft",
                      "OpusInfo" : "http://www.microsoft.com",
                      "FileDigest" : "/fd \"SHA256\"",
                      "PageHash" : "/NPH",
                      "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  },
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
            },
            {
                  "KeyCode" : "CP-401405",
                  "OperationCode" : "NuGetVerify",
                  "Parameters" : {},
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
            }
         ]
      SessionTimeout: 20
      VerboseLogin: true

  # Do after Nuget Pack so not part of Nuget Pack
  - task: PowerShell@2
    displayName: 'Zip the GarnetServer binaries'
    inputs:
      filePath: .azure/pipelines/createbinaries.ps1 
      arguments: 2
      workingDirectory: .azure/pipelines

  - task: CopyFiles@2
    displayName: 'Copy Zipped Files (both net80 and net90 in zipped file) to Artifacts dir: $(Build.artifactstagingdirectory)'
    inputs:
      Contents: '**'
      SourceFolder: '$(Build.SourcesDirectory)/main/GarnetServer/bin/Release/publish/output'
      TargetFolder: $(build.artifactstagingdirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

  - task: GitHubRelease@1
    displayName: 'Create the GitHub release'
    condition: eq(variables['Build.SourceBranchName'], 'main')
    inputs:    
      action: 'create'
      gitHubConnection: ADO_to_Github_ServiceConnection
      tagSource: userSpecifiedTag
      tag: 'v$(Build.BuildNumber)'
      title: 'Garnet v$(Build.BuildNumber)'
      releaseNotesSource: inline
      releaseNotesInline: |
       Get NuGet binaries at:
       * Library: https://www.nuget.org/packages/Microsoft.Garnet
       * Tool: https://www.nuget.org/packages/garnet-server

       More information at:
       * https://microsoft.github.io/garnet
       * https://github.com/microsoft/garnet
       * https://www.microsoft.com/en-us/research/project/garnet
     
      assets: |
        $(Build.ArtifactStagingDirectory)/*.nupkg
        $(Build.ArtifactStagingDirectory)/*.zip
        $(Build.ArtifactStagingDirectory)/*.tar.xz
        $(Build.ArtifactStagingDirectory)/*.7z

  - task: NuGetCommand@2
    displayName: 'Push both packages to NuGet.org'
    condition: eq(variables['Build.SourceBranchName'], 'main')
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: external
      publishFeedCredentials: GarnetADO_to_Nuget