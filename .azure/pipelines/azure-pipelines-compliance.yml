variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
resources:
  repositories:
  - repository: self
    type: git
jobs: 
 - job: Phase_1 
   displayName: Assessment
   cancelTimeoutInMinutes: 1
   pool:
     name: Azure Pipelines
     vmImage: windows-latest
   steps:
   - checkout: self
     clean: False
     submodules: recursive
     persistCredentials: True
   - task: UseDotNet@2
     displayName: 'Use .NET Core sdk 8.0.x'
     inputs:
       version: 8.0.x
   - task: NuGetToolInstaller@1
     displayName: Nuget Tool Installer
     inputs:
       versionspec: '*'
       checkLatest: true
   - task: NuGetAuthenticate@1
     displayName: 'NuGet Authenticate'
   - task: DotNetCoreCLI@2
     displayName: dotnet build
     inputs:
       projects: '**/Garnet.*.csproj'
       arguments: '-c Release'
   - task: CopyFiles@2
     displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
     inputs:
       Contents: '**\bin\AnyCPU\$(BuildConfiguration)\**\*'
       TargetFolder: '$(Build.ArtifactStagingDirectory)'
   - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
     displayName: Component Detection
     inputs:
       detectorsToRun: NuGet,Npm
       scanType: 'Register'
       verbosity: 'Verbose'
       alertWarningLevel: 'High'
   - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@3
     name: CredScan6  
     displayName: Run CredScan
     continueOnError: True
     inputs:
       suppressionsFile: $(Build.SourcesDirectory)\.azure\pipelines\credscan-exclusion.json
       debugMode: false
       folderSuppression: false
       verboseOutput: true
   - task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@2
     name: SdtReport1
     displayName: 'Create Security Analysis Report'
     inputs:
       GdnExportTsvFile: true
   - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@3
     name: PublishSecurityAnalysisLogs12
     displayName: Publish Security Analysis Logs
     inputs:
       TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
       AntiMalware: true
       APIScan: true
       CodesignValidation: true
       CredScan: true
       FortifySCA: true
       FxCop: true
       ModernCop: true
       MSRD: true
       SDLNativeRules: true
       Semmle: true
       TSLint: true
       WebScout: true
   - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@2
     name: PostAnalysis13
     displayName: Post Analysis
     inputs:
       GdnBreakAllTools: false
       GdnBreakGdnToolCredScan: true
       GdnBreakGdnToolFxCop: true
       GdnBreakGdnToolFxCopSeverity: Error
       GdnBreakGdnToolSemmle: true
