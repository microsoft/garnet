name: Garnet Helm Chart

on:
  workflow_dispatch: # allow manual run
  push:
    branches:
      - main
    paths:
      - 'charts/**'

permissions:
  packages: write
      
jobs:
  helm-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Extract version number from Version.props
        run: |
          export VERSION_PROPS=$(awk -F'[<>]' '/VersionPrefix/{print $3}' Version.props)

      - name: Set helm chart appVersion
        run: |
          sed -ie 's#Version.props#'"${VERSION_PROPS}"'#g' charts/garnet/Chart.yaml

      - name: Helm lint and package
        run: |
          mkdir .cr-release-packages
          for chart in $(find charts -depth 1 -type d); do
            if [ -z "${chart:-}" ]; then
              break
            fi
            helm lint "${chart}"
            helm package "${chart}" --dependency-update --destination .cr-release-packages
          done

      - name: GitHub Container Registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          helm registry login -u "${{ github.repository_owner }}" -p "${{ secrets.GITHUB_TOKEN }}" ghcr.io
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/${{ github.repository }}/helm-charts"
          done

