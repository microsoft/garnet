name: Garnet Docker images for Linux

on:
  workflow_dispatch: # allow manual run
  workflow_run:
    workflows: ['Garnet .NET CI']
    types: [completed]
    branches: [main]
  push:
    tags: 'v*'

jobs:
  docker:
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image: ghcr.io/${{ github.repository }}
            os: ubuntu-latest
          - dockerfile: Dockerfile.alpine
            image: ghcr.io/${{ github.repository }}-alpine
            os: ubuntu-latest
          - dockerfile: Dockerfile.ubuntu
            image: ghcr.io/${{ github.repository }}-jammy
            os: ubuntu-latest
          - dockerfile: Dockerfile.chiseled
            image: ghcr.io/${{ github.repository }}-jammy-chiseled
            os: ubuntu-latest
          - dockerfile: Dockerfile.cbl-mariner
            image: ghcr.io/${{ github.repository }}-cbl-mariner2.0
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            # generate Docker tags based on the following events/attributes
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.dockerfile }}
          provenance: false
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
