"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5056],{28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>o});var r=n(96540);const l={},s=r.createContext(l);function t(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(s.Provider,{value:i},e.children)}},36223:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"welcome/features","title":"Summary of Garnet Features","description":"Core API","source":"@site/docs/welcome/features.md","sourceDirName":"welcome","slug":"/welcome/features","permalink":"/garnet/docs/welcome/features","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/garnet/tree/main/website/docs/welcome/features.md","tags":[],"version":"current","frontMatter":{"id":"features","sidebar_label":"Features","title":"Summary of Garnet Features"},"sidebar":"garnetDocSidebar","previous":{"title":"News","permalink":"/garnet/docs/welcome/news"},"next":{"title":"Releases","permalink":"/garnet/docs/welcome/releases"}}');var l=n(74848),s=n(28453);const t={id:"features",sidebar_label:"Features",title:"Summary of Garnet Features"},o="Summary of Features",a={},c=[{value:"Core API",id:"core-api",level:2},{value:"Logging &amp; Diagnostics",id:"logging--diagnostics",level:2},{value:"Networking",id:"networking",level:2},{value:"Extensibility",id:"extensibility",level:2},{value:"Memory",id:"memory",level:2},{value:"Tiered Storage",id:"tiered-storage",level:2},{value:"Durability",id:"durability",level:2},{value:"Cluster Mode",id:"cluster-mode",level:2},{value:"Multi-Platform",id:"multi-platform",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"summary-of-features",children:"Summary of Features"})}),"\n",(0,l.jsx)(i.h2,{id:"core-api",children:"Core API"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Raw strings (Get and Set variants, key expiration)"}),"\n",(0,l.jsx)(i.li,{children:"Data structures (List, Hash, Set, Sorted Set, Geo)"}),"\n",(0,l.jsx)(i.li,{children:"Analytics APIs such as Hyperloglog and Bitmap"}),"\n",(0,l.jsx)(i.li,{children:"Client-side transaction API (MULTI/EXEC)"}),"\n",(0,l.jsx)(i.li,{children:"Publish/Subscribe"}),"\n",(0,l.jsx)(i.li,{children:"Admin operations"}),"\n",(0,l.jsx)(i.li,{children:"Access control (ACL) features"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"logging--diagnostics",children:"Logging & Diagnostics"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Metrics - client side"}),"\n",(0,l.jsx)(i.li,{children:"Metrics - in-process queryable"}),"\n",(0,l.jsxs)(i.li,{children:["Diagnostic logger via ",(0,l.jsx)(i.code,{children:"ILogger"})]}),"\n",(0,l.jsx)(i.li,{children:"JSON config file support, with basic support for redis.conf format as well"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"networking",children:"Networking"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Pluggable network layer"}),"\n",(0,l.jsx)(i.li,{children:"Full support for TLS via SslStream"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"extensibility",children:"Extensibility"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Comprehensive Lua scripting support"}),"\n",(0,l.jsx)(i.li,{children:"Fast C# based extensibility (raw string and object operations)"}),"\n",(0,l.jsx)(i.li,{children:"Dynamic and static registration"}),"\n",(0,l.jsx)(i.li,{children:"Transactional multi-key stored procedures"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"memory",children:"Memory"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Tsavorite storage engine optimized for scalable memory access"}),"\n",(0,l.jsx)(i.li,{children:"Space reuse for memory tier to prevent fragmentation"}),"\n",(0,l.jsx)(i.li,{children:"Hybrid log-structured storage design with in-place updates in memory"}),"\n",(0,l.jsx)(i.li,{children:"Configurable memory size control (index, log, objects)"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"tiered-storage",children:"Tiered Storage"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Three uses of storage: larger-than-memory cache, AOF (append-only file), checkpoints"}),"\n",(0,l.jsxs)(i.li,{children:["Extensible ",(0,l.jsx)(i.code,{children:"IDevice"})," abstraction to support different devices"]}),"\n",(0,l.jsx)(i.li,{children:"Specializations for SSD/HDD device (Windows and Linux Native, as well as generic device based on .NET FileStream)"}),"\n",(0,l.jsx)(i.li,{children:"Specialization for Azure Storage device"}),"\n",(0,l.jsx)(i.li,{children:"Automatic log compaction"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"durability",children:"Durability"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Fast non-blocking checkpoint-recovery"}),"\n",(0,l.jsx)(i.li,{children:"Append-only-file (write-ahead log)"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"cluster-mode",children:"Cluster Mode"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Sharding"}),"\n",(0,l.jsx)(i.li,{children:"Replication"}),"\n",(0,l.jsx)(i.li,{children:"Failover"}),"\n",(0,l.jsx)(i.li,{children:"Key migration for dynamic scale-out"}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"multi-platform",children:"Multi-Platform"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"Any platform supported by .NET"}),"\n",(0,l.jsx)(i.li,{children:"Windows"}),"\n",(0,l.jsx)(i.li,{children:"Linux"}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);