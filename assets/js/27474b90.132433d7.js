"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2596],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},81465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"getting-started/build","title":"Build and Test","description":"Clone from Sources","source":"@site/docs/getting-started/build.md","sourceDirName":"getting-started","slug":"/getting-started","permalink":"/garnet/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/garnet/tree/main/website/docs/getting-started/build.md","tags":[],"version":"current","frontMatter":{"id":"build","sidebar_label":"Build","title":"Build and Test","slug":"/getting-started"},"sidebar":"garnetDocSidebar","previous":{"title":"About Us","permalink":"/garnet/docs/welcome/about-us"},"next":{"title":"Configuration","permalink":"/garnet/docs/getting-started/configuration"}}');var r=t(74848),o=t(28453);const i={id:"build",sidebar_label:"Build",title:"Build and Test",slug:"/getting-started"},a=void 0,d={},l=[{value:"Clone from Sources",id:"clone-from-sources",level:2},{value:"Build the Project",id:"build-the-project",level:2},{value:"Connect using a RESP Client",id:"connect-using-a-resp-client",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"clone-from-sources",children:"Clone from Sources"}),"\n",(0,r.jsx)(n.p,{children:"Clone the Garnet repo. Garnet is located on the main branch of that repo."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:microsoft/garnet.git\n"})}),"\n",(0,r.jsx)(n.h2,{id:"build-the-project",children:"Build the Project"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure .NET 8 is installed, following instructions ",(0,r.jsx)(n.a,{href:"https://dotnet.microsoft.com/en-us/download",children:"here"}),". You can use either Linux or Windows; Garnet works equally well on both platforms."]}),"\n",(0,r.jsx)(n.p,{children:"Go to the root folder of the repo and build using dotnet, or open Garnet.sln and build using Visual Studio 2022 (we recommend the Preview version for the latest features). Make sure Visual Studio is up to date by checking for updates."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd garnet\ndotnet restore\ndotnet build -c Release\n"})}),"\n",(0,r.jsx)(n.h1,{id:"run-our-test-suite",children:"Run our Test Suite"}),"\n",(0,r.jsx)(n.p,{children:"As a sanity check, you can run our test suite. The command to run tests in Release mode for .NET 8 with verbose output to console is shown below (make sure you are in the root folder of the repo)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'dotnet test -c Release -f net8.0 -l "console;verbosity=detailed"\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Tests that use Azure cloud storage are skipped, unless you set the environment variable ",(0,r.jsx)(n.code,{children:"RunAzureTests"})," to ",(0,r.jsx)(n.code,{children:"yes"})," and have Azurite running."]})}),"\n",(0,r.jsx)(n.h1,{id:"deploy-garnet-server",children:"Deploy Garnet Server"}),"\n",(0,r.jsx)(n.p,{children:"Now, you are ready to deploy the Garnet server. This is simple, run the below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd main/GarnetServer\ndotnet run -c Release -f net8.0\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"By default, Garnet listens to TCP port 6379, make sure to adjust your firewall settings when you need to access the server from remote machines.\nAlso, note that Garnet by default listens to the IPAddress.Any and IPAddress.IPv6Any endpoints.\nPlease make sure to adjust these based on your requirements."})}),"\n",(0,r.jsx)(n.p,{children:"To see the configurable options and their defaults, run the below command. You can configure index size, memory size, page size, data file paths and checkpoint paths, IP address to bind to, port number to run on, etc."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"dotnet run -c Release -f net8.0 -- --help\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"For running the server with an index size of 512MB (instead of the default), run this:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"dotnet run -c Release -f net8.0 -- -i 512m\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"connect-using-a-resp-client",children:"Connect using a RESP Client"}),"\n",(0,r.jsx)(n.p,{children:"Garnet uses the RESP protocol, so you can use any Redis client in your favorite client language to talk to the Garnet server. For C# applications, you can either use StackExchange.Redis or our own C# client, called GarnetClient."}),"\n",(0,r.jsxs)(n.p,{children:["On Windows, You can use ",(0,r.jsx)("a",{href:"https://github.com/RedisInsight/RedisInsight",target:"_blank",children:"RedisInsight"})," which has a graphical interface and a cli, or install ",(0,r.jsx)("a",{href:"https://www.memurai.com/",target:"_blank",children:"Memurai"}),"\n(which offers Redis on Windows) and use their ",(0,r.jsx)(n.strong,{children:"memurai-cli"})," command line tool. You can also use ",(0,r.jsx)(n.strong,{children:"redis-cli"})," on WSL with the below configuration."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Start GarnetServer in Windows, listening to ",(0,r.jsx)(n.code,{children:"0.0.0.0"})," (IPAddress.Any). Use the argument ",(0,r.jsx)(n.code,{children:"--bind 0.0.0.0"})," if necessary."]}),"\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.code,{children:"GarnetServer.exe"})," to firewall exceptions (Windows Defender Firewall -> Allow an app through Windows Firewall)"]}),"\n",(0,r.jsxs)(n.li,{children:["On WSL, get the host IP address using ",(0,r.jsx)(n.code,{children:"ip route show | grep -i default | awk '{ print $3}'"})]}),"\n",(0,r.jsxs)(n.li,{children:["Connect from WSL using ",(0,r.jsx)(n.code,{children:"redis-cli -h <address>"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If the above does not work to connect from WSL, you can try the ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/networking#mirrored-mode-networking",children:"mirrored networking mode"})," available in Windows 11 22H2 or later."]}),"\n",(0,r.jsx)(n.p,{children:"With any of these clients, just make sure to use the correct port (e.g., 6379) when connecting to a Garnet server."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);