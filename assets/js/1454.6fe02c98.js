"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1454],{43861:(t,e,a)=>{function r(t,e){t.accDescr&&e.setAccDescription?.(t.accDescr),t.accTitle&&e.setAccTitle?.(t.accTitle),t.title&&e.setDiagramTitle?.(t.title)}a.d(e,{S:()=>r}),(0,a(26936).K2)(r,"populateCommonDb")},61454:(t,e,a)=>{a.d(e,{diagram:()=>w});var r=a(43861),i=a(98045),s=a(10163),n=a(26936),o=a(78731),l=n.UI.packet,c=class{constructor(){this.packet=[],this.setAccTitle=n.SV,this.getAccTitle=n.iN,this.setDiagramTitle=n.ke,this.getDiagramTitle=n.ab,this.getAccDescription=n.m7,this.setAccDescription=n.EI}static{(0,n.K2)(this,"PacketDB")}getConfig(){const t=(0,i.$t)({...l,...(0,n.zj)().packet});return t.showBits&&(t.paddingY+=10),t}getPacket(){return this.packet}pushWord(t){t.length>0&&this.packet.push(t)}clear(){(0,n.IU)(),this.packet=[]}},d=(0,n.K2)((t,e)=>{(0,r.S)(t,e);let a=-1,i=[],s=1;const{bitsPerRow:o}=e.getConfig();for(let{start:r,end:l,bits:c,label:d}of t.blocks){if(void 0!==r&&void 0!==l&&l<r)throw new Error(`Packet block ${r} - ${l} is invalid. End must be greater than start.`);if(r??=a+1,r!==a+1)throw new Error(`Packet block ${r} - ${l??r} is not contiguous. It should start from ${a+1}.`);if(0===c)throw new Error(`Packet block ${r} is invalid. Cannot have a zero bit field.`);for(l??=r+(c??1)-1,c??=l-r+1,a=l,n.Rm.debug(`Packet block ${r} - ${a} with label ${d}`);i.length<=o+1&&e.getPacket().length<1e4;){const[t,a]=b({start:r,end:l,bits:c,label:d},s,o);if(i.push(t),t.end+1===s*o&&(e.pushWord(i),i=[],s++),!a)break;({start:r,end:l,bits:c,label:d}=a)}}e.pushWord(i)},"populate"),b=(0,n.K2)((t,e,a)=>{if(void 0===t.start)throw new Error("start should have been set during first phase");if(void 0===t.end)throw new Error("end should have been set during first phase");if(t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);if(t.end+1<=e*a)return[t,void 0];const r=e*a-1,i=e*a;return[{start:t.start,end:r,label:t.label,bits:r-t.start},{start:i,end:t.end,label:t.label,bits:t.end-i}]},"getNextFittingBlock"),p={parser:{yy:void 0},parse:(0,n.K2)(async t=>{const e=await(0,o.qg)("packet",t),a=p.parser?.yy;if(!(a instanceof c))throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");n.Rm.debug(e),d(e,a)},"parse")},h=(0,n.K2)((t,e,a,r)=>{const i=r.db,o=i.getConfig(),{rowHeight:l,paddingY:c,bitWidth:d,bitsPerRow:b}=o,p=i.getPacket(),h=i.getDiagramTitle(),g=l+c,f=g*(p.length+1)-(h?0:l),u=d*b+2,w=(0,s.D)(e);w.attr("viewbox",`0 0 ${u} ${f}`),(0,n.a$)(w,f,u,o.useMaxWidth);for(const[s,n]of p.entries())k(w,n,s,o);w.append("text").text(h).attr("x",u/2).attr("y",f-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),k=(0,n.K2)((t,e,a,{rowHeight:r,paddingX:i,paddingY:s,bitWidth:n,bitsPerRow:o,showBits:l})=>{const c=t.append("g"),d=a*(r+s)+s;for(const b of e){const t=b.start%o*n+1,e=(b.end-b.start+1)*n-i;if(c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(b.label),!l)continue;const a=b.end===b.start,s=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",s).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(b.start),a||c.append("text").attr("x",t+e).attr("y",s).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(b.end)}},"drawWord"),g={draw:h},f={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},u=(0,n.K2)(({packet:t}={})=>{const e=(0,i.$t)(f,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`},"styles"),w={parser:p,get db(){return new c},renderer:g,styles:u}}}]);