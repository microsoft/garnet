"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8708],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},46641:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"commands/garnet-specific-commands","title":"Garnet-specific Commands","description":"Apart from Garnet\'s server extensions, we support many API calls that are not available","source":"@site/docs/commands/garnet-specific.md","sourceDirName":"commands","slug":"/commands/garnet-specific-commands","permalink":"/garnet/docs/commands/garnet-specific-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/garnet/tree/main/website/docs/commands/garnet-specific.md","tags":[],"version":"current","frontMatter":{"id":"garnet-specific-commands","sidebar_label":"Garnet-specific Commands","title":"Garnet-specific Commands","slug":"garnet-specific-commands"},"sidebar":"garnetDocSidebar","previous":{"title":"Scripting and functions","permalink":"/garnet/docs/commands/scripting"},"next":{"title":"JSON Module","permalink":"/garnet/docs/commands/json"}}');var t=s(74848),r=s(28453);const l={id:"garnet-specific-commands",sidebar_label:"Garnet-specific Commands",title:"Garnet-specific Commands",slug:"garnet-specific-commands"},a=void 0,h={},d=[{value:"FORCEGC",id:"forcegc",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Resp Reply",id:"resp-reply",level:4},{value:"COMMITAOF",id:"commitaof",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Resp Reply",id:"resp-reply-1",level:4},{value:"HCOLLECT",id:"hcollect",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Resp Reply",id:"resp-reply-2",level:4},{value:"ZCOLLECT",id:"zcollect",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Resp Reply",id:"resp-reply-3",level:4},{value:"COSCAN",id:"coscan",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"SECONDARYOF",id:"secondaryof",level:3},{value:"REGISTERCS",id:"registercs",level:3},{value:"RUNTXP",id:"runtxp",level:3},{value:"Syntax",id:"syntax-5",level:4},{value:"WATCHMS",id:"watchms",level:3},{value:"Syntax",id:"syntax-6",level:4},{value:"WATCHOS",id:"watchos",level:3},{value:"Syntax",id:"syntax-7",level:4},{value:"ASYNC",id:"async",level:3},{value:"MODULE LOADCS",id:"module-loadcs",level:3},{value:"Native ETag Support",id:"native-etag-support",level:2},{value:"<strong>SET (WITHETAG)</strong>",id:"set-withetag",level:3},{value:"<strong>Syntax</strong>",id:"syntax-8",level:4},{value:"Resp Reply",id:"resp-reply-4",level:4},{value:"<strong>GETWITHETAG</strong>",id:"getwithetag",level:3},{value:"<strong>Syntax</strong>",id:"syntax-9",level:4},{value:"<strong>Response</strong>",id:"response",level:4},{value:"<strong>SETIFMATCH</strong>",id:"setifmatch",level:3},{value:"<strong>Syntax</strong>",id:"syntax-10",level:4},{value:"<strong>Response</strong>",id:"response-1",level:4},{value:"<strong>SETIFGREATER</strong>",id:"setifgreater",level:3},{value:"<strong>Syntax</strong>",id:"syntax-11",level:4},{value:"<strong>Response</strong>",id:"response-2",level:4},{value:"<strong>GETIFNOTMATCH</strong>",id:"getifnotmatch",level:3},{value:"<strong>Syntax</strong>",id:"syntax-12",level:4},{value:"<strong>Response</strong>",id:"response-3",level:4},{value:"<strong>DELIFGREATER</strong>",id:"delifgreater",level:3},{value:"<strong>Syntax</strong>",id:"syntax-13",level:4},{value:"<strong>Response</strong>",id:"response-4",level:4},{value:"Compatibility and Behavior with Non-ETag Commands",id:"compatibility-and-behavior-with-non-etag-commands",level:3},{value:"ZEXPIRE",id:"zexpire",level:3},{value:"Syntax",id:"syntax-14",level:4},{value:"Resp Reply",id:"resp-reply-5",level:4},{value:"ZEXPIREAT",id:"zexpireat",level:3},{value:"Syntax",id:"syntax-15",level:4},{value:"Resp Reply",id:"resp-reply-6",level:4},{value:"ZPEXPIRE",id:"zpexpire",level:3},{value:"Syntax",id:"syntax-16",level:4},{value:"Resp Reply",id:"resp-reply-7",level:4},{value:"ZPEXPIREAT",id:"zpexpireat",level:3},{value:"Syntax",id:"syntax-17",level:4},{value:"Resp Reply",id:"resp-reply-8",level:4},{value:"ZTTL",id:"zttl",level:3},{value:"Syntax",id:"syntax-18",level:4},{value:"Resp Reply",id:"resp-reply-9",level:4},{value:"ZPTTL",id:"zpttl",level:3},{value:"Syntax",id:"syntax-19",level:4},{value:"Resp Reply",id:"resp-reply-10",level:4},{value:"ZEXPIRETIME",id:"zexpiretime",level:3},{value:"Syntax",id:"syntax-20",level:4},{value:"Resp Reply",id:"resp-reply-11",level:4},{value:"ZPEXPIRETIME",id:"zpexpiretime",level:3},{value:"Syntax",id:"syntax-21",level:4},{value:"Resp Reply",id:"resp-reply-12",level:4},{value:"ZPERSIST",id:"zpersist",level:3},{value:"Syntax",id:"syntax-22",level:4},{value:"Resp Reply",id:"resp-reply-13",level:4},{value:"ZCOLLECT",id:"zcollect-1",level:3},{value:"Syntax",id:"syntax-23",level:4},{value:"Resp Reply",id:"resp-reply-14",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Apart from Garnet's ",(0,t.jsx)(n.a,{href:"/garnet/docs/extensions/overview",children:"server extensions"}),", we support many API calls that are not available\nin other RESP servers. These are described below."]}),"\n",(0,t.jsx)(n.h3,{id:"forcegc",children:"FORCEGC"}),"\n",(0,t.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    FORCEGC [generation]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Invoke garbage collection on the server side. Optionally, specify the generation level for the collection. For more\ninformation, see ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.gc.collect",children:"this article"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"commitaof",children:"COMMITAOF"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    COMMITAOF [DBID]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Issues a manual commit of the append-only-file (for all active databases in the Garnet instance). This is useful when auto-commits are turned off, but you need the system to commit at specific times. If a DB ID is specified, a manual commit of the append-only-file of that specific database will be issues."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-1",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"hcollect",children:"HCOLLECT"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-2",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    HCOLLECT key [key ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Manualy trigger cleanup of expired field from memory for a given Hash set key."}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"*"})," as the key to collect it from all hash keys."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-2",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Simple reply: OK response\nError reply: ERR HCOLLECT scan already in progress"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zcollect",children:"ZCOLLECT"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-3",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZCOLLECT key [key ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Manualy trigger cleanup of expired member from memory for a given Hash set key."}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"*"})," as the key to collect it from all sorted set keys."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-3",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Simple reply: OK response\nError reply: ERR ZCOLLECT scan already in progress"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"coscan",children:"COSCAN"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-4",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    COSCAN key cursor [MATCH pattern] [COUNT count] [NOVALUES]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Custom Object Scan is similar to ",(0,t.jsx)(n.a,{href:"/garnet/docs/commands/data-structures#hscan",children:"HSCAN"})," and ",(0,t.jsx)(n.a,{href:"/garnet/docs/commands/data-structures#sscan",children:"SSCAN"}),". It iterates\nover the fields and values of a custom object stored at a given key."]}),"\n",(0,t.jsx)(n.p,{children:"The match parameter allows to apply a filter to elements after they have been retrieved from the collection.\nThe count option sets a limit to the maximum number of items returned from the server to this command. This limit\nis also set in conjunction with the object-scan-count-limit of the global server settings."}),"\n",(0,t.jsx)(n.p,{children:"You can use the NOVALUES option to make Garnet return only the keys without their corresponding values."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"secondaryof",children:"SECONDARYOF"}),"\n",(0,t.jsxs)(n.p,{children:["Configures a server as secondary of another, or promotes it to a primary. Same as ",(0,t.jsx)(n.a,{href:"/garnet/docs/commands/server#replicaof",children:"REPLICAOF"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"registercs",children:"REGISTERCS"}),"\n",(0,t.jsxs)(n.p,{children:["This allows registering specific custom commands and transactions implemented in C#, in a server side DLL library.\nSee ",(0,t.jsx)(n.a,{href:"/garnet/docs/dev/custom-commands",children:"this page"})," for details."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"runtxp",children:"RUNTXP"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-5",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    RUNTXP txid [args]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Runs the specific custom transactional procedure indetified by its ID."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"watchms",children:"WATCHMS"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-6",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    WATCHMS key [key ...]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Same as ",(0,t.jsx)(n.a,{href:"/garnet/docs/commands/transactions#watch",children:"WATCH"}),", but specifies that the key is only present in the main (raw string) store."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"watchos",children:"WATCHOS"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-7",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    WATCHOS key [key ...]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Same as ",(0,t.jsx)(n.a,{href:"/garnet/docs/commands/transactions#watch",children:"WATCH"}),", but specifies that the key is only present in the object store."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"async",children:"ASYNC"}),"\n",(0,t.jsxs)(n.p,{children:["Async interface to Garnet when accessing larger-than-memory data. See ",(0,t.jsx)(n.a,{href:"https://github.com/microsoft/garnet/pull/387",children:"this link"})," for details."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"module-loadcs",children:"MODULE LOADCS"}),"\n",(0,t.jsxs)(n.p,{children:["This the equivalent of ",(0,t.jsx)(n.code,{children:"MODULE LOAD"})," in the original RESP protocol. This loads a self-contained module in which the module\ninitialization code registers all relevant commands and transactions automatically. See ",(0,t.jsx)(n.a,{href:"/garnet/docs/dev/custom-commands",children:"this page"}),"\nfor details."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"native-etag-support",children:"Native ETag Support"}),"\n",(0,t.jsxs)(n.p,{children:["Garnet provides support for ETags on raw strings. By using the ETag-related commands outlined below, you can associate any ",(0,t.jsx)(n.strong,{children:"string based key-value pair"})," inserted into Garnet with an automatically updated ETag."]}),"\n",(0,t.jsxs)(n.p,{children:['Compatibility with non-ETag commands and the behavior of data inserted with ETags are detailed at the end of this document.\nTo initialize a key value pair with an ETag you can use either the SET command with the newly added "WITHETAG" optional flag, or you can take any existing Key value pair and call SETIFMATCH with the ETag argument as 0 (Any key value pair without an explicit ETag has an ETag of 0 implicitly). Read more about Etag use cases and patterns ',(0,t.jsx)(n.a,{href:"../../blog/etags-when-and-how",children:"here"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"set-withetag",children:(0,t.jsx)(n.strong,{children:"SET (WITHETAG)"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-8",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    SET key value [NX | XX] [EX seconds | PX milliseconds] [KEEPTTL] WITHETAG\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Set ",(0,t.jsx)(n.strong,{children:"key"})," to hold the string value along with an ETag. If key already holds a value, it is overwritten, regardless of its type. Any previous time to live associated with the ",(0,t.jsx)(n.strong,{children:"key"})," is discarded on successful SET operation."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Options:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"EX seconds -- Set the specified expire time, in seconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"PX milliseconds -- Set the specified expire time, in milliseconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"NX -- Only set the key if it does not already exist."}),"\n",(0,t.jsx)(n.li,{children:"XX -- Only set the key if it already exists."}),"\n",(0,t.jsx)(n.li,{children:"KEEPTTL -- Retain the time to live associated with the key."}),"\n",(0,t.jsxs)(n.li,{children:["WITHETAG -- ",(0,t.jsx)(n.strong,{children:"Adding this sets the Key Value pair with an initial ETag"}),", if called on an existing key value pair with an ETag, this command will update the ETag transparently."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-4",children:"Resp Reply"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Integer reply: WITHETAG given: The ETag associated with the value."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getwithetag",children:(0,t.jsx)(n.strong,{children:"GETWITHETAG"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-9",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"GETWITHETAG key\n"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieves the value and the ETag associated with the given key."}),"\n",(0,t.jsx)(n.h4,{id:"response",children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsx)(n.p,{children:"One of the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Array reply"}),": An array of two items returned on success. The first item is an integer representing the ETag, and the second is the bulk string value of the key. If called on a key-value pair without ETag, the etag will be 0."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Nil reply"}),": If the key does not exist."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"setifmatch",children:(0,t.jsx)(n.strong,{children:"SETIFMATCH"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-10",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"SETIFMATCH key value etag [EX seconds | PX milliseconds] [NOGET]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sets/updates a key value pair with the given etag only if (1) the etag given in the request matches the already existing etag ; or (2) there was no existing value; or (3) the existing value was not associated with any etag and the sent etag was 0."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Options:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"EX seconds -- Set the specified expire time, in seconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"PX milliseconds -- Set the specified expire time, in milliseconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"NOGET -- The value is not returned even if the etag mismatched"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"response-1",children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Array reply"}),": If the sent etag matches the existing etag the reponse will be an array where the first item is the updated etag, and the second value is nil. If the etags do not match then the response array will hold the latest etag, and the latest value in order."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"setifgreater",children:(0,t.jsx)(n.strong,{children:"SETIFGREATER"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-11",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"SETIFGREATER key value etag [EX seconds | PX milliseconds] [NOGET]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sets/updates a key value pair with the given etag only if (1) the etag given in the request is greater than the already existing etag ; or (2) there was no existing value; or (3) the existing value was not associated with any etag and the sent etag was greater than 0."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Options:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"EX seconds -- Set the specified expire time, in seconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"PX milliseconds -- Set the specified expire time, in milliseconds (a positive integer)."}),"\n",(0,t.jsx)(n.li,{children:"NOGET -- The value is not returned even if the sent etag was not greater to existing etag."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"response-2",children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Array reply"}),": If the sent etag is greater than the existing etag then an array where the first item is the updated etag, and the second value is nil is returned. If the sentEtag is less than or equal to the existing etag then the response array will hold the latest etag, and the latest value in order."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getifnotmatch",children:(0,t.jsx)(n.strong,{children:"GETIFNOTMATCH"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-12",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"GETIFNOTMATCH key etag\n"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieves the value if the ETag associated with the key has changed; otherwise, returns a response indicating no change."}),"\n",(0,t.jsx)(n.h4,{id:"response-3",children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsx)(n.p,{children:"One of the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Array reply"}),": If the ETag does not match, an array of two items is returned. The first item is the latest ETag, and the second item is the value associated with the key. If the Etag matches  the first item in the response array is the etag and the second item is nil."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Nil reply"}),": If the key does not exist."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"delifgreater",children:(0,t.jsx)(n.strong,{children:"DELIFGREATER"})}),"\n",(0,t.jsx)(n.h4,{id:"syntax-13",children:(0,t.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"DELIFGREATER key etag\n"})}),"\n",(0,t.jsx)(n.p,{children:"Deletes a key only if the provided Etag is strictly greater than the existing Etag for the key."}),"\n",(0,t.jsx)(n.h4,{id:"response-4",children:(0,t.jsx)(n.strong,{children:"Response"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integer reply"}),": Returns 1 if the key was successfully deleted; otherwise, returns 0."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"compatibility-and-behavior-with-non-etag-commands",children:"Compatibility and Behavior with Non-ETag Commands"}),"\n",(0,t.jsx)(n.p,{children:"ETags are currently not supported for servers running in Cluster mode. This will be supported soon."}),"\n",(0,t.jsx)(n.p,{children:"Below is the expected behavior of ETag-associated key-value pairs when non-ETag commands are used."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MSET, BITOP"}),": These commands will replace an existing ETag-associated key-value pair with a non-ETag key-value pair, effectively removing the ETag."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SET"}),': Only if used with additional option "WITHETAG" will calling SET update the etag while inserting the new key-value pair over the existing key-value pair.']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"RENAME"}),": RENAME takes an option for WITHETAG. When called WITHETAG it will rename the key with an etag if the key being renamed to did not exist, else it will increment the existing etag of the key being renamed to."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Custom Commands"}),": While etag based key value pairs ",(0,t.jsx)(n.strong,{children:"can be used blindly inside of custom transactions and custom procedures"}),", ETag set key value pairs are ",(0,t.jsx)(n.strong,{children:"not supported to be used from inside of Custom Raw String Functions."})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"All other commands will update the etag internally if they modify the underlying data, and any responses from them will not expose the etag to the client. To the users the etag and it's updates remain hidden in non-etag commands."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zexpire",children:"ZEXPIRE"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-14",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZEXPIRE key seconds [NX | XX | GT | LT] MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sets a timeout on one or more members of a sorted set key. After the timeout has expired, the members will automatically be deleted. The timeout is specified in seconds."}),"\n",(0,t.jsx)(n.p,{children:"The command supports several options to control when the expiration should be set:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NX:"})," Only set expiry on members that have no existing expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XX:"})," Only set expiry on members that already have an expiry set"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GT:"})," Only set expiry when it's greater than the current expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LT:"})," Only set expiry when it's less than the current expiry"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"NX"}),", ",(0,t.jsx)(n.strong,{children:"XX"}),", ",(0,t.jsx)(n.strong,{children:"GT"}),", and ",(0,t.jsx)(n.strong,{children:"LT"})," options are mutually exclusive."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-5",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 if the timeout was set"}),"\n",(0,t.jsx)(n.li,{children:"0 if the member doesn't exist"}),"\n",(0,t.jsx)(n.li,{children:"-1 if timeout was not set due to condition not being met"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zexpireat",children:"ZEXPIREAT"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-15",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZEXPIREAT key unix-time-seconds [NX | XX | GT | LT] MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sets an absolute expiration time (Unix timestamp in seconds) for one or more sorted set members. After the timestamp has passed, the members will automatically be deleted."}),"\n",(0,t.jsx)(n.p,{children:"The command supports several options to control when the expiration should be set:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NX:"})," Only set expiry on members that have no existing expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XX:"})," Only set expiry on members that already have an expiry set"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GT:"})," Only set expiry when it's greater than the current expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LT:"})," Only set expiry when it's less than the current expiry"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"NX"}),", ",(0,t.jsx)(n.strong,{children:"XX"}),", ",(0,t.jsx)(n.strong,{children:"GT"}),", and ",(0,t.jsx)(n.strong,{children:"LT"})," options are mutually exclusive."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-6",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 if the timeout was set"}),"\n",(0,t.jsx)(n.li,{children:"0 if the member doesn't exist"}),"\n",(0,t.jsx)(n.li,{children:"-1 if timeout was not set due to condition not being met"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zpexpire",children:"ZPEXPIRE"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-16",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZPEXPIRE key milliseconds [NX | XX | GT | LT] MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Similar to HEXPIRE but the timeout is specified in milliseconds instead of seconds."}),"\n",(0,t.jsx)(n.p,{children:"The command supports several options to control when the expiration should be set:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NX:"})," Only set expiry on members that have no existing expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XX:"})," Only set expiry on members that already have an expiry set"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GT:"})," Only set expiry when it's greater than the current expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LT:"})," Only set expiry when it's less than the current expiry"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"NX"}),", ",(0,t.jsx)(n.strong,{children:"XX"}),", ",(0,t.jsx)(n.strong,{children:"GT"}),", and ",(0,t.jsx)(n.strong,{children:"LT"})," options are mutually exclusive."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-7",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 if the timeout was set"}),"\n",(0,t.jsx)(n.li,{children:"0 if the member doesn't exist"}),"\n",(0,t.jsx)(n.li,{children:"-1 if timeout was not set due to condition not being met"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zpexpireat",children:"ZPEXPIREAT"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-17",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZPEXPIREAT key unix-time-milliseconds [NX | XX | GT | LT] MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Similar to HEXPIREAT but uses Unix timestamp in milliseconds instead of seconds."}),"\n",(0,t.jsx)(n.p,{children:"The command supports several options to control when the expiration should be set:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NX:"})," Only set expiry on members that have no existing expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XX:"})," Only set expiry on members that already have an expiry set"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GT:"})," Only set expiry when it's greater than the current expiry"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LT:"})," Only set expiry when it's less than the current expiry"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"NX"}),", ",(0,t.jsx)(n.strong,{children:"XX"}),", ",(0,t.jsx)(n.strong,{children:"GT"}),", and ",(0,t.jsx)(n.strong,{children:"LT"})," options are mutually exclusive."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-8",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 if the timeout was set"}),"\n",(0,t.jsx)(n.li,{children:"0 if the member doesn't exist"}),"\n",(0,t.jsx)(n.li,{children:"-1 if timeout was not set due to condition not being met"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zttl",children:"ZTTL"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-18",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZTTL key MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the remaining time to live in seconds for one or more sorted set members that have a timeout set."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-9",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"TTL in seconds if the member exists and has an expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-1 if the member exists but has no expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-2 if the member does not exist"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zpttl",children:"ZPTTL"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-19",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZPTTL key MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Similar to HTTL but returns the remaining time to live in milliseconds instead of seconds."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-10",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"TTL in milliseconds if the member exists and has an expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-1 if the member exists but has no expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-2 if the member does not exist"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zexpiretime",children:"ZEXPIRETIME"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-20",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZEXPIRETIME key MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the absolute Unix timestamp (in seconds) at which the specified sorted set members will expire."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-11",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unix timestamp in seconds when the member will expire"}),"\n",(0,t.jsx)(n.li,{children:"-1 if the member exists but has no expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-2 if the member does not exist"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zpexpiretime",children:"ZPEXPIRETIME"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-21",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZPEXPIRETIME key MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Similar to HEXPIRETIME but returns the expiry timestamp in milliseconds instead of seconds."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-12",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unix timestamp in milliseconds when the member will expire"}),"\n",(0,t.jsx)(n.li,{children:"-1 if the member exists but has no expiry set"}),"\n",(0,t.jsx)(n.li,{children:"-2 if the member does not exist"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zpersist",children:"ZPERSIST"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-22",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZPERSIST key MEMBERS nummembers member [member ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Removes the expiration from the specified sorted set members, making them persistent."}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-13",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Array reply: For each member, returns:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 if the timeout was removed"}),"\n",(0,t.jsx)(n.li,{children:"0 if the member exists but has no timeout"}),"\n",(0,t.jsx)(n.li,{children:"-1 if the member does not exist"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"zcollect-1",children:"ZCOLLECT"}),"\n",(0,t.jsx)(n.h4,{id:"syntax-23",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"    ZCOLLECT key [key ...]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Manualy trigger cleanup of expired member from memory for a given Hash set key."}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"*"})," as the key to collect it from all sorted set keys."]}),"\n",(0,t.jsx)(n.h4,{id:"resp-reply-14",children:"Resp Reply"}),"\n",(0,t.jsx)(n.p,{children:"Simple reply: OK response\nError reply: ERR ZCOLLECT scan already in progress"}),"\n",(0,t.jsx)(n.hr,{})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);