"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3278],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},59922:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"commands/scripting-commands","title":"Scripting and functions","description":"EVAL","source":"@site/docs/commands/scripting-and-functions.md","sourceDirName":"commands","slug":"/commands/scripting","permalink":"/garnet/docs/commands/scripting","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/garnet/tree/main/website/docs/commands/scripting-and-functions.md","tags":[],"version":"current","frontMatter":{"id":"scripting-commands","sidebar_label":"Scripting and functions","title":"Scripting and functions","slug":"scripting"},"sidebar":"garnetDocSidebar","previous":{"title":"ACL","permalink":"/garnet/docs/commands/acl"},"next":{"title":"Garnet-specific Commands","permalink":"/garnet/docs/commands/garnet-specific-commands"}}');var i=s(74848),r=s(28453);const a={id:"scripting-commands",sidebar_label:"Scripting and functions",title:"Scripting and functions",slug:"scripting"},c=void 0,l={},d=[{value:"EVAL",id:"eval",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Resp Reply",id:"resp-reply",level:4},{value:"EVALSHA",id:"evalsha",level:3},{value:"Syntax",id:"syntax-1",level:4},{value:"Resp Reply",id:"resp-reply-1",level:4},{value:"SCRIPT EXISTS",id:"script-exists",level:3},{value:"Syntax",id:"syntax-2",level:4},{value:"Resp Reply",id:"resp-reply-2",level:4},{value:"SCRIPT FLUSH",id:"script-flush",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Resp Reply",id:"resp-reply-3",level:4},{value:"SCRIPT LOAD",id:"script-load",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"Resp Reply",id:"resp-reply-4",level:4}];function p(e){const n={code:"code",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"eval",children:"EVAL"}),"\n",(0,i.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"    EVAL script numkeys [key [key ...]] [arg [arg ...]]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Invoke the execution of a server-side Lua script."}),"\n",(0,i.jsx)(n.h4,{id:"resp-reply",children:"Resp Reply"}),"\n",(0,i.jsx)(n.p,{children:"The return value depends on the script that was executed."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"evalsha",children:"EVALSHA"}),"\n",(0,i.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"    EVALSHA sha1 numkeys [key [key ...]] [arg [arg ...]]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Evaluate a script from the server's cache by its SHA1 digest."}),"\n",(0,i.jsx)(n.h4,{id:"resp-reply-1",children:"Resp Reply"}),"\n",(0,i.jsx)(n.p,{children:"The return value depends on the script that was executed."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"script-exists",children:"SCRIPT EXISTS"}),"\n",(0,i.jsx)(n.h4,{id:"syntax-2",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"    SCRIPT EXISTS sha1 [sha1 ...]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns information about the existence of the scripts in the script cache."}),"\n",(0,i.jsx)(n.h4,{id:"resp-reply-2",children:"Resp Reply"}),"\n",(0,i.jsx)(n.p,{children:"Array reply: an array of integers that correspond to the specified SHA1 digest arguments."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"script-flush",children:"SCRIPT FLUSH"}),"\n",(0,i.jsx)(n.h4,{id:"syntax-3",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"    SCRIPT FLUSH [ASYNC | SYNC]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Flush the Lua scripts cache."}),"\n",(0,i.jsx)(n.h4,{id:"resp-reply-3",children:"Resp Reply"}),"\n",(0,i.jsx)(n.p,{children:"Simple string reply: OK."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"script-load",children:"SCRIPT LOAD"}),"\n",(0,i.jsx)(n.h4,{id:"syntax-4",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"    SCRIPT LOAD script\n"})}),"\n",(0,i.jsx)(n.p,{children:"Load a script into the scripts cache, without executing it."}),"\n",(0,i.jsx)(n.h4,{id:"resp-reply-4",children:"Resp Reply"}),"\n",(0,i.jsx)(n.p,{children:"Bulk string reply: the SHA1 digest of the script added into the script cache."}),"\n",(0,i.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);