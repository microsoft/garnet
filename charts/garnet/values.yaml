cluster:
  enabled: true
  initJob:
    enabled: true
    annotations: {}
    backoffLimit: 6
    ttlSecondsAfterFinished: 0
    image:
      registry: docker.io
      repository: redis
      pullPolicy: IfNotPresent
      tag: ""
  statefulSet:
    replicas: 5
  containers:
    args: ["--cluster", "--port", "6379", "-m", "128m", "-i", "128m"]
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

standalone:
  statefulSet:
    replicas: 1
  containers:
    args: ["--port", "6379", "-m", "128m", "-i", "128m"]
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

# Common configurations
image:
  registry: ghcr.io
  repository: microsoft/garnet
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""
  token: false

initContainers: []

dnsConfig: {}
dnsPolicy: ClusterFirst

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  annotations: {}
  type: ClusterIP
  port: 6379

resources: {}

extraVolumeMounts: []
extraVolumes: []

nodeSelector: {}
tolerations: []
affinity: {}

# Default values
statefulSet:
  annotations: {}
  revisionHistoryLimit: 1
  updateStrategy:
    type: RollingUpdate

containers:
  port: 6379
  livenessProbe: {}
  readinessProbe: {}

persistence:
  enabled: false

volumeClaimTemplates:
  storageClassName: local-storage
  requestsStorage: 1Gi
