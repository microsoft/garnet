FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:8.0-jammy AS build
ARG TARGETARCH
WORKDIR /src

# Copy csproj and restore as distinct layers
COPY libs/client/*.csproj libs/client/
COPY libs/cluster/*.csproj libs/cluster/
COPY libs/common/*.csproj libs/common/
COPY libs/host/*.csproj libs/host/
COPY libs/server/*.csproj libs/server/
COPY libs/resources/*.csproj libs/resources/
COPY libs/storage/Tsavorite/cs/src/core/*.csproj libs/storage/Tsavorite/cs/src/core/
COPY libs/storage/Tsavorite/cs/src/devices/AzureStorageDevice/*.csproj libs/storage/Tsavorite/cs/src/devices/AzureStorageDevice/
COPY main/GarnetServer/*.csproj main/GarnetServer/
COPY metrics/HdrHistogram/*.csproj metrics/HdrHistogram/
COPY Directory.Build.props Directory.Build.props
COPY Directory.Packages.props Directory.Packages.props
COPY Version.props Version.props
COPY .editorconfig .editorconfig

RUN dotnet restore main/GarnetServer/GarnetServer.csproj -a $TARGETARCH

# Copy everthing else and publish app
COPY Garnet.snk Garnet.snk
COPY libs/ libs/
COPY main/ main/
COPY metrics/ metrics/
COPY test/testcerts test/testcerts

WORKDIR /src/main/GarnetServer
RUN dotnet publish -a $TARGETARCH -c Release -o /app --no-restore --self-contained false -f net8.0 -p:EnableSourceLink=false -p:EnableSourceControlManagerQueries=false

# Separate stage to install libaio1 on amd64 (avoiding QEMU issues on arm64)
FROM --platform=linux/amd64 ubuntu:22.04 AS builder
RUN apt-get update && apt-get install -y libaio1

# Final stage/image
FROM mcr.microsoft.com/dotnet/runtime:8.0-jammy AS runtime

# Copy libaio1 from amd64 builder stage (avoiding installation under QEMU)
COPY --from=builder /usr/lib/x86_64-linux-gnu/libaio.so.1 /usr/lib/x86_64-linux-gnu/

RUN mkdir /data /app \
    && chown -R $APP_UID:$APP_UID /data /app

VOLUME /data

WORKDIR /app
COPY --from=build --chown=$APP_UID:$APP_UID /app /app

# Run container as a non-root user
USER $APP_UID

# For inter-container communication.
EXPOSE 6379

ENTRYPOINT ["/app/GarnetServer"]
